<?php

namespace App\OurEdu\SchoolAccounts\ClassroomClass\SchoolBranchSupervisor\Requests;

use App\OurEdu\BaseApp\Requests\BaseAppRequest;
use App\OurEdu\Users\UserEnums;
use Carbon\Carbon;
use Illuminate\Validation\Rule;

class ClassroomClassRequest extends BaseAppRequest
{


    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        $rules = [
            'from_time' => 'required|before:to_time',
            'to_time' => 'required|after:from_time',
            'start_date_time' => "after:now"
        ];

        if ($this->filled('from_time') and $this->filled('to_time')) {
            $rules['until_date'] = 'nullable|date|after:now|required_if:repeat,==,3|before:'.Carbon::parse($this->get("from"))->addMonths(6)->format('Y-m-d');
        }

        return array_merge($rules , $this->prepareForValidation());
    }

    protected function prepareForValidation()
    {
        $from = request('from');
        $fromTime = request('from_time');

        $hour=explode(":",$fromTime)[0]??null;
        $minute=explode(":",$fromTime)[1]??null;
        if($hour&&$minute){
            $from = new Carbon($from);
            $from->setHour($hour);
            $from->setMinute($minute);

            if ($from->lt(now())) {
                return [
                    'from' => 'required|date',
//                    'from' => 'required|date|after_or_equal:now',
//                    'until_date' => 'required_if:repeat,3',

                ];
            }
        }

        return [];
    }

    public function messages()
    {

        if (\Lang::locale() == 'en') {
            return [
                'from.after' => 'please, select a start date after current day date',
                'to_time.after' => 'Please, select an end time that is after the start time',
                'from_time.before' => 'Please, select an start time that is before the end time',
                'until_date.before' => 'Repeat date should be less than a 6 months.',
                'start_date_time.after' => 'the date must be at least is today date, and the start time must be greater than the now time at least one minutes',
            ];
        }
        if (\Lang::locale() == 'ar') {
            return [
                'from.after' => 'برجاء تحديد تاريخ البداية على ان يكون لاحقاً لتاريخ اليوم الحالي',
                'to_time.after' => 'برجاء تحديد وقت نهاية الحصة على ان يكون بعد وقت بداية الحصة',
                'from_time.before' => 'برجاء تحديد وقت بداية الحصة على ان يكون قبل وقت نهاية الحصة',
                'until_date.before' => 'يجب الا يتعدى تاريخ التكرار 6 اشهر من تاريخ اليوم',
                'start_date_time.after' => 'يجب أن يكون التاريخ على الأقل هو تاريخ اليوم ,ووقت البدء يجب أن يكون أكبر من الوقت الحالي على الأقل دقيقة واحدة',

            ];
        }
    }

    public function getValidatorInstance()
    {
        $this->merge(["start_date_time" => ($this->get("from"). " " . $this->get("from_time"))]);

        return parent::getValidatorInstance(); // TODO: Change the autogenerated stub
    }

}
